/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'ActionSet': { kind: 'INTERFACE'; name: 'ActionSet'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; possibleTypes: 'TeamActionSet'; };
    'ActivityState': { name: 'ActivityState'; enumValues: 'CREATED' | 'ACTIVE' | 'COMPLETED' | 'READY' | 'INVALID' | 'CALLED' | 'QUEUED'; };
    'Address': { kind: 'OBJECT'; name: 'Address'; fields: { 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryId': { name: 'countryId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stateId': { name: 'stateId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AuthorizationType': { name: 'AuthorizationType'; enumValues: 'TWITTER' | 'TWITCH' | 'STEAM' | 'DISCORD' | 'XBOX' | 'EPIC' | 'BATTLENET' | 'MIXER'; };
    'Boolean': unknown;
    'BracketConfig': { kind: 'INTERFACE'; name: 'BracketConfig'; fields: { 'bracketType': { name: 'bracketType'; type: { kind: 'ENUM'; name: 'BracketType'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; possibleTypes: 'RaceBracketConfig'; };
    'BracketSetGameDataInput': { kind: 'INPUT_OBJECT'; name: 'BracketSetGameDataInput'; isOneOf: false; inputFields: [{ name: 'winnerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'gameNum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'entrant1Score'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'entrant2Score'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'stageId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'selections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BracketSetGameSelectionInput'; ofType: null; }; }; defaultValue: null }]; };
    'BracketSetGameSelectionInput': { kind: 'INPUT_OBJECT'; name: 'BracketSetGameSelectionInput'; isOneOf: false; inputFields: [{ name: 'entrantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'characterId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'BracketType': { name: 'BracketType'; enumValues: 'SINGLE_ELIMINATION' | 'DOUBLE_ELIMINATION' | 'ROUND_ROBIN' | 'SWISS' | 'EXHIBITION' | 'CUSTOM_SCHEDULE' | 'MATCHMAKING' | 'ELIMINATION_ROUNDS' | 'RACE' | 'CIRCUIT'; };
    'Character': { kind: 'OBJECT'; name: 'Character'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Comparator': { name: 'Comparator'; enumValues: 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL' | 'EQUAL' | 'LESS_THAN_OR_EQUAL' | 'LESS_THAN'; };
    'ContactInfo': { kind: 'OBJECT'; name: 'ContactInfo'; fields: { 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryId': { name: 'countryId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nameFirst': { name: 'nameFirst'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nameLast': { name: 'nameLast'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stateId': { name: 'stateId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'zipcode': { name: 'zipcode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Entrant': { kind: 'OBJECT'; name: 'Entrant'; fields: { 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'initialSeedNum': { name: 'initialSeedNum'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'isDisqualified': { name: 'isDisqualified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'paginatedSets': { name: 'paginatedSets'; type: { kind: 'OBJECT'; name: 'SetConnection'; ofType: null; } }; 'participants': { name: 'participants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Participant'; ofType: null; }; } }; 'seeds': { name: 'seeds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Seed'; ofType: null; }; } }; 'skill': { name: 'skill'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'standing': { name: 'standing'; type: { kind: 'OBJECT'; name: 'Standing'; ofType: null; } }; 'stream': { name: 'stream'; type: { kind: 'OBJECT'; name: 'Streams'; ofType: null; } }; 'streams': { name: 'streams'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Streams'; ofType: null; }; } }; 'team': { name: 'team'; type: { kind: 'INTERFACE'; name: 'Team'; ofType: null; } }; }; };
    'EntrantConnection': { kind: 'OBJECT'; name: 'EntrantConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'Event': { kind: 'OBJECT'; name: 'Event'; fields: { 'checkInBuffer': { name: 'checkInBuffer'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'checkInDuration': { name: 'checkInDuration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'checkInEnabled': { name: 'checkInEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'competitionTier': { name: 'competitionTier'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'deckSubmissionDeadline': { name: 'deckSubmissionDeadline'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'entrantSizeMax': { name: 'entrantSizeMax'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'entrantSizeMin': { name: 'entrantSizeMin'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'entrants': { name: 'entrants'; type: { kind: 'OBJECT'; name: 'EntrantConnection'; ofType: null; } }; 'hasDecks': { name: 'hasDecks'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hasTasks': { name: 'hasTasks'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'isOnline': { name: 'isOnline'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'league': { name: 'league'; type: { kind: 'OBJECT'; name: 'League'; ofType: null; } }; 'matchRulesMarkdown': { name: 'matchRulesMarkdown'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'numEntrants': { name: 'numEntrants'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'phaseGroups': { name: 'phaseGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PhaseGroup'; ofType: null; }; } }; 'phases': { name: 'phases'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Phase'; ofType: null; }; } }; 'prizingInfo': { name: 'prizingInfo'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'publishing': { name: 'publishing'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'rulesMarkdown': { name: 'rulesMarkdown'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rulesetId': { name: 'rulesetId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rulesetSettings': { name: 'rulesetSettings'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'sets': { name: 'sets'; type: { kind: 'OBJECT'; name: 'SetConnection'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'standings': { name: 'standings'; type: { kind: 'OBJECT'; name: 'StandingConnection'; ofType: null; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'ActivityState'; ofType: null; } }; 'stations': { name: 'stations'; type: { kind: 'OBJECT'; name: 'StationsConnection'; ofType: null; } }; 'teamManagementDeadline': { name: 'teamManagementDeadline'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'teamNameAllowed': { name: 'teamNameAllowed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'teamRosterSize': { name: 'teamRosterSize'; type: { kind: 'OBJECT'; name: 'TeamRosterSize'; ofType: null; } }; 'tournament': { name: 'tournament'; type: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'useEventSeeds': { name: 'useEventSeeds'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userEntrant': { name: 'userEntrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'videogame': { name: 'videogame'; type: { kind: 'OBJECT'; name: 'Videogame'; ofType: null; } }; 'waves': { name: 'waves'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Wave'; ofType: null; }; } }; }; };
    'EventConnection': { kind: 'OBJECT'; name: 'EventConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'EventEntrantPageQuery': { kind: 'INPUT_OBJECT'; name: 'EventEntrantPageQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'EventEntrantPageQueryFilter'; ofType: null; }; defaultValue: null }]; };
    'EventEntrantPageQueryFilter': { kind: 'INPUT_OBJECT'; name: 'EventEntrantPageQueryFilter'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'EventFilter': { kind: 'INPUT_OBJECT'; name: 'EventFilter'; isOneOf: false; inputFields: [{ name: 'videogameId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'published'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fantasyEventId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'fantasyRosterHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'EventOwner': { kind: 'OBJECT'; name: 'EventOwner'; fields: { 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'eventId': { name: 'eventId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'fullName': { name: 'fullName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gamerTag': { name: 'gamerTag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EventOwnerConnection': { kind: 'OBJECT'; name: 'EventOwnerConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EventOwner'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'EventOwnersQuery': { kind: 'INPUT_OBJECT'; name: 'EventOwnersQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'EventTeam': { kind: 'OBJECT'; name: 'EventTeam'; fields: { 'discriminator': { name: 'discriminator'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'globalTeam': { name: 'globalTeam'; type: { kind: 'OBJECT'; name: 'GlobalTeam'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'members': { name: 'members'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TeamMember'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EventTeamConnection': { kind: 'OBJECT'; name: 'EventTeamConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EventTeam'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'EventTier': { kind: 'OBJECT'; name: 'EventTier'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Float': unknown;
    'Game': { kind: 'OBJECT'; name: 'Game'; fields: { 'entrant1Score': { name: 'entrant1Score'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'entrant2Score': { name: 'entrant2Score'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'orderNum': { name: 'orderNum'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'selections': { name: 'selections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GameSelection'; ofType: null; }; } }; 'stage': { name: 'stage'; type: { kind: 'OBJECT'; name: 'Stage'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'winnerId': { name: 'winnerId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'GameSelection': { kind: 'OBJECT'; name: 'GameSelection'; fields: { 'character': { name: 'character'; type: { kind: 'OBJECT'; name: 'Character'; ofType: null; } }; 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'orderNum': { name: 'orderNum'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'participant': { name: 'participant'; type: { kind: 'OBJECT'; name: 'Participant'; ofType: null; } }; 'selectionType': { name: 'selectionType'; type: { kind: 'ENUM'; name: 'GameSelectionType'; ofType: null; } }; 'selectionValue': { name: 'selectionValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'GameSelectionType': { name: 'GameSelectionType'; enumValues: 'CHARACTER'; };
    'GlobalTeam': { kind: 'OBJECT'; name: 'GlobalTeam'; fields: { 'discriminator': { name: 'discriminator'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'eventTeams': { name: 'eventTeams'; type: { kind: 'OBJECT'; name: 'EventTeamConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'leagueTeams': { name: 'leagueTeams'; type: { kind: 'OBJECT'; name: 'EventTeamConnection'; ofType: null; } }; 'members': { name: 'members'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TeamMember'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ID': unknown;
    'Image': { kind: 'OBJECT'; name: 'Image'; fields: { 'height': { name: 'height'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'ratio': { name: 'ratio'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'width': { name: 'width'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Int': unknown;
    'JSON': unknown;
    'League': { kind: 'OBJECT'; name: 'League'; fields: { 'addrState': { name: 'addrState'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'currency': { name: 'currency'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endAt': { name: 'endAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'entrantCount': { name: 'entrantCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'eventOwners': { name: 'eventOwners'; type: { kind: 'OBJECT'; name: 'EventOwnerConnection'; ofType: null; } }; 'eventRegistrationClosesAt': { name: 'eventRegistrationClosesAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; } }; 'finalEventId': { name: 'finalEventId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'hasOfflineEvents': { name: 'hasOfflineEvents'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hasOnlineEvents': { name: 'hasOnlineEvents'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hashtag': { name: 'hashtag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'isOnline': { name: 'isOnline'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lat': { name: 'lat'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'links': { name: 'links'; type: { kind: 'OBJECT'; name: 'TournamentLinks'; ofType: null; } }; 'lng': { name: 'lng'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'mapsPlaceId': { name: 'mapsPlaceId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'numProgressingToFinalEvent': { name: 'numProgressingToFinalEvent'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'numUniquePlayers': { name: 'numUniquePlayers'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'postalCode': { name: 'postalCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'primaryContact': { name: 'primaryContact'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'primaryContactType': { name: 'primaryContactType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publishing': { name: 'publishing'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'registrationClosesAt': { name: 'registrationClosesAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'rules': { name: 'rules'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shortSlug': { name: 'shortSlug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'showStandings': { name: 'showStandings'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'standings': { name: 'standings'; type: { kind: 'OBJECT'; name: 'StandingConnection'; ofType: null; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'teamCreationClosesAt': { name: 'teamCreationClosesAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'tiers': { name: 'tiers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EventTier'; ofType: null; }; } }; 'timezone': { name: 'timezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tournamentType': { name: 'tournamentType'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'venueAddress': { name: 'venueAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'venueName': { name: 'venueName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'videogames': { name: 'videogames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Videogame'; ofType: null; }; } }; }; };
    'LeagueConnection': { kind: 'OBJECT'; name: 'LeagueConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'League'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'LeagueEventsFilter': { kind: 'INPUT_OBJECT'; name: 'LeagueEventsFilter'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }, { name: 'pointMappingGroupIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tierIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'upcoming'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'leagueEntrantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'LeagueEventsQuery': { kind: 'INPUT_OBJECT'; name: 'LeagueEventsQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'LeagueEventsFilter'; ofType: null; }; defaultValue: null }]; };
    'LeaguePageFilter': { kind: 'INPUT_OBJECT'; name: 'LeaguePageFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'ownerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'afterDate'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; defaultValue: null }, { name: 'beforeDate'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; defaultValue: null }, { name: 'computedUpdatedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isFeatured'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hasBannerImages'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'activeShops'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'past'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'published'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publiclySearchable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'upcoming'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'videogameIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'LeagueQuery': { kind: 'INPUT_OBJECT'; name: 'LeagueQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'LeaguePageFilter'; ofType: null; }; defaultValue: null }, { name: 'sort'; type: { kind: 'ENUM'; name: 'TournamentPaginationSort'; ofType: null; }; defaultValue: null }]; };
    'LocationFilterType': { kind: 'INPUT_OBJECT'; name: 'LocationFilterType'; isOneOf: false; inputFields: [{ name: 'countryCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'state'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MatchConfig': { kind: 'INTERFACE'; name: 'MatchConfig'; fields: { 'bracketType': { name: 'bracketType'; type: { kind: 'ENUM'; name: 'BracketType'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; possibleTypes: 'RaceMatchConfig'; };
    'MatchConfigVerificationMethod': { name: 'MatchConfigVerificationMethod'; enumValues: 'TWITCH' | 'STREAM_ME' | 'ANY' | 'MIXER' | 'YOUTUBE'; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'deletePhase': { name: 'deletePhase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteStation': { name: 'deleteStation'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteWave': { name: 'deleteWave'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'generateRegistrationToken': { name: 'generateRegistrationToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'markSetCalled': { name: 'markSetCalled'; type: { kind: 'OBJECT'; name: 'Set'; ofType: null; } }; 'markSetInProgress': { name: 'markSetInProgress'; type: { kind: 'OBJECT'; name: 'Set'; ofType: null; } }; 'registerForTournament': { name: 'registerForTournament'; type: { kind: 'OBJECT'; name: 'Participant'; ofType: null; } }; 'reportBracketSet': { name: 'reportBracketSet'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Set'; ofType: null; }; } }; 'resetSet': { name: 'resetSet'; type: { kind: 'OBJECT'; name: 'Set'; ofType: null; } }; 'resolveScheduleConflicts': { name: 'resolveScheduleConflicts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Seed'; ofType: null; }; } }; 'swapSeeds': { name: 'swapSeeds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Seed'; ofType: null; }; } }; 'updateBracketSet': { name: 'updateBracketSet'; type: { kind: 'OBJECT'; name: 'Set'; ofType: null; } }; 'updatePhaseGroups': { name: 'updatePhaseGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PhaseGroup'; ofType: null; }; } }; 'updatePhaseSeeding': { name: 'updatePhaseSeeding'; type: { kind: 'OBJECT'; name: 'Phase'; ofType: null; } }; 'upsertPhase': { name: 'upsertPhase'; type: { kind: 'OBJECT'; name: 'Phase'; ofType: null; } }; 'upsertStation': { name: 'upsertStation'; type: { kind: 'OBJECT'; name: 'Stations'; ofType: null; } }; 'upsertWave': { name: 'upsertWave'; type: { kind: 'OBJECT'; name: 'Wave'; ofType: null; } }; }; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'filter': { name: 'filter'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'page': { name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'perPage': { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'sortBy': { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'total': { name: 'total'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalPages': { name: 'totalPages'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PaginationSearchType': { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; isOneOf: false; inputFields: [{ name: 'fieldsToSearch'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'searchString'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Participant': { kind: 'OBJECT'; name: 'Participant'; fields: { 'checkedIn': { name: 'checkedIn'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'checkedInAt': { name: 'checkedInAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'connectedAccounts': { name: 'connectedAccounts'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'contactInfo': { name: 'contactInfo'; type: { kind: 'OBJECT'; name: 'ContactInfo'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'entrants': { name: 'entrants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; } }; 'gamerTag': { name: 'gamerTag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'player': { name: 'player'; type: { kind: 'OBJECT'; name: 'Player'; ofType: null; } }; 'prefix': { name: 'prefix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'requiredConnections': { name: 'requiredConnections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProfileAuthorization'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'verified': { name: 'verified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'ParticipantConnection': { kind: 'OBJECT'; name: 'ParticipantConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Participant'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'ParticipantPageFilter': { kind: 'INPUT_OBJECT'; name: 'ParticipantPageFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'eventIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }, { name: 'gamerTag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'unpaid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'incompleteTeam'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'missingDeck'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'checkedIn'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'notCheckedIn'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ParticipantPaginationQuery': { kind: 'INPUT_OBJECT'; name: 'ParticipantPaginationQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'ParticipantPageFilter'; ofType: null; }; defaultValue: null }]; };
    'Phase': { kind: 'OBJECT'; name: 'Phase'; fields: { 'bracketType': { name: 'bracketType'; type: { kind: 'ENUM'; name: 'BracketType'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'isExhibition': { name: 'isExhibition'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'numSeeds': { name: 'numSeeds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'paginatedSeeds': { name: 'paginatedSeeds'; type: { kind: 'OBJECT'; name: 'SeedConnection'; ofType: null; } }; 'phaseGroups': { name: 'phaseGroups'; type: { kind: 'OBJECT'; name: 'PhaseGroupConnection'; ofType: null; } }; 'phaseOrder': { name: 'phaseOrder'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'seeds': { name: 'seeds'; type: { kind: 'OBJECT'; name: 'SeedConnection'; ofType: null; } }; 'sets': { name: 'sets'; type: { kind: 'OBJECT'; name: 'SetConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'ActivityState'; ofType: null; } }; 'waves': { name: 'waves'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Wave'; ofType: null; }; } }; }; };
    'PhaseGroup': { kind: 'OBJECT'; name: 'PhaseGroup'; fields: { 'bracketType': { name: 'bracketType'; type: { kind: 'ENUM'; name: 'BracketType'; ofType: null; } }; 'bracketUrl': { name: 'bracketUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'displayIdentifier': { name: 'displayIdentifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstRoundTime': { name: 'firstRoundTime'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'numRounds': { name: 'numRounds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'paginatedSeeds': { name: 'paginatedSeeds'; type: { kind: 'OBJECT'; name: 'SeedConnection'; ofType: null; } }; 'paginatedSets': { name: 'paginatedSets'; type: { kind: 'OBJECT'; name: 'SetConnection'; ofType: null; } }; 'phase': { name: 'phase'; type: { kind: 'OBJECT'; name: 'Phase'; ofType: null; } }; 'progressionsOut': { name: 'progressionsOut'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Progression'; ofType: null; }; } }; 'rounds': { name: 'rounds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Round'; ofType: null; }; } }; 'seedMap': { name: 'seedMap'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'seeds': { name: 'seeds'; type: { kind: 'OBJECT'; name: 'SeedConnection'; ofType: null; } }; 'sets': { name: 'sets'; type: { kind: 'OBJECT'; name: 'SetConnection'; ofType: null; } }; 'standings': { name: 'standings'; type: { kind: 'OBJECT'; name: 'StandingConnection'; ofType: null; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'tiebreakOrder': { name: 'tiebreakOrder'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'wave': { name: 'wave'; type: { kind: 'OBJECT'; name: 'Wave'; ofType: null; } }; }; };
    'PhaseGroupConnection': { kind: 'OBJECT'; name: 'PhaseGroupConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PhaseGroup'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'PhaseGroupPageQuery': { kind: 'INPUT_OBJECT'; name: 'PhaseGroupPageQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'entrantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'PhaseGroupPageQueryFilter'; ofType: null; }; defaultValue: null }]; };
    'PhaseGroupPageQueryFilter': { kind: 'INPUT_OBJECT'; name: 'PhaseGroupPageQueryFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'waveId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'PhaseGroupUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PhaseGroupUpdateInput'; isOneOf: false; inputFields: [{ name: 'phaseGroupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'stationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'waveId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'PhaseUpsertInput': { kind: 'INPUT_OBJECT'; name: 'PhaseUpsertInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'bracketType'; type: { kind: 'ENUM'; name: 'BracketType'; ofType: null; }; defaultValue: null }]; };
    'Player': { kind: 'OBJECT'; name: 'Player'; fields: { 'gamerTag': { name: 'gamerTag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'prefix': { name: 'prefix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rankings': { name: 'rankings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PlayerRank'; ofType: null; }; } }; 'recentSets': { name: 'recentSets'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Set'; ofType: null; }; } }; 'recentStandings': { name: 'recentStandings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Standing'; ofType: null; }; } }; 'sets': { name: 'sets'; type: { kind: 'OBJECT'; name: 'SetConnection'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'PlayerRank': { kind: 'OBJECT'; name: 'PlayerRank'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'rank': { name: 'rank'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProfileAuthorization': { kind: 'OBJECT'; name: 'ProfileAuthorization'; fields: { 'externalId': { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'externalUsername': { name: 'externalUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'stream': { name: 'stream'; type: { kind: 'OBJECT'; name: 'Stream'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'AuthorizationType'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Progression': { kind: 'OBJECT'; name: 'Progression'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'originOrder': { name: 'originOrder'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'originPhase': { name: 'originPhase'; type: { kind: 'OBJECT'; name: 'Phase'; ofType: null; } }; 'originPhaseGroup': { name: 'originPhaseGroup'; type: { kind: 'OBJECT'; name: 'PhaseGroup'; ofType: null; } }; 'originPlacement': { name: 'originPlacement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'currentUser': { name: 'currentUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'league': { name: 'league'; type: { kind: 'OBJECT'; name: 'League'; ofType: null; } }; 'leagues': { name: 'leagues'; type: { kind: 'OBJECT'; name: 'LeagueConnection'; ofType: null; } }; 'participant': { name: 'participant'; type: { kind: 'OBJECT'; name: 'Participant'; ofType: null; } }; 'phase': { name: 'phase'; type: { kind: 'OBJECT'; name: 'Phase'; ofType: null; } }; 'phaseGroup': { name: 'phaseGroup'; type: { kind: 'OBJECT'; name: 'PhaseGroup'; ofType: null; } }; 'player': { name: 'player'; type: { kind: 'OBJECT'; name: 'Player'; ofType: null; } }; 'seed': { name: 'seed'; type: { kind: 'OBJECT'; name: 'Seed'; ofType: null; } }; 'set': { name: 'set'; type: { kind: 'OBJECT'; name: 'Set'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'stream': { name: 'stream'; type: { kind: 'OBJECT'; name: 'Streams'; ofType: null; } }; 'streamQueue': { name: 'streamQueue'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'StreamQueue'; ofType: null; }; } }; 'team': { name: 'team'; type: { kind: 'INTERFACE'; name: 'Team'; ofType: null; } }; 'tournament': { name: 'tournament'; type: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; } }; 'tournaments': { name: 'tournaments'; type: { kind: 'OBJECT'; name: 'TournamentConnection'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'videogame': { name: 'videogame'; type: { kind: 'OBJECT'; name: 'Videogame'; ofType: null; } }; 'videogames': { name: 'videogames'; type: { kind: 'OBJECT'; name: 'VideogameConnection'; ofType: null; } }; }; };
    'RaceBracketConfig': { kind: 'OBJECT'; name: 'RaceBracketConfig'; fields: { 'automaticEndTime': { name: 'automaticEndTime'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'automaticStartTime': { name: 'automaticStartTime'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'bracketType': { name: 'bracketType'; type: { kind: 'ENUM'; name: 'BracketType'; ofType: null; } }; 'goalTargetComparator': { name: 'goalTargetComparator'; type: { kind: 'ENUM'; name: 'Comparator'; ofType: null; } }; 'goalTargetValue': { name: 'goalTargetValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'limitMode': { name: 'limitMode'; type: { kind: 'ENUM'; name: 'RaceLimitMode'; ofType: null; } }; 'limitValue': { name: 'limitValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'raceType': { name: 'raceType'; type: { kind: 'ENUM'; name: 'RaceType'; ofType: null; } }; }; };
    'RaceLimitMode': { name: 'RaceLimitMode'; enumValues: 'BEST_ALL' | 'FIRST_ALL' | 'PLAYTIME'; };
    'RaceMatchConfig': { kind: 'OBJECT'; name: 'RaceMatchConfig'; fields: { 'bracketType': { name: 'bracketType'; type: { kind: 'ENUM'; name: 'BracketType'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'playerReportingEnabled': { name: 'playerReportingEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'verificationMethods': { name: 'verificationMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'MatchConfigVerificationMethod'; ofType: null; }; } }; 'verificationRequired': { name: 'verificationRequired'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'RaceType': { name: 'RaceType'; enumValues: 'GOALS' | 'TIMED'; };
    'ResetAffectedData': { kind: 'OBJECT'; name: 'ResetAffectedData'; fields: { 'affectedPhaseGroupCount': { name: 'affectedPhaseGroupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'affectedSetCount': { name: 'affectedSetCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'affectedSets': { name: 'affectedSets'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Set'; ofType: null; }; } }; }; };
    'ResolveConflictsLockedSeedConfig': { kind: 'INPUT_OBJECT'; name: 'ResolveConflictsLockedSeedConfig'; isOneOf: false; inputFields: [{ name: 'eventId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'numSeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ResolveConflictsOptions': { kind: 'INPUT_OBJECT'; name: 'ResolveConflictsOptions'; isOneOf: false; inputFields: [{ name: 'lockedSeeds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ResolveConflictsLockedSeedConfig'; ofType: null; }; }; defaultValue: null }]; };
    'Round': { kind: 'OBJECT'; name: 'Round'; fields: { 'bestOf': { name: 'bestOf'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; }; };
    'Score': { kind: 'OBJECT'; name: 'Score'; fields: { 'displayValue': { name: 'displayValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Seed': { kind: 'OBJECT'; name: 'Seed'; fields: { 'checkedInParticipants': { name: 'checkedInParticipants'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'groupSeedNum': { name: 'groupSeedNum'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'isBye': { name: 'isBye'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'phase': { name: 'phase'; type: { kind: 'OBJECT'; name: 'Phase'; ofType: null; } }; 'phaseGroup': { name: 'phaseGroup'; type: { kind: 'OBJECT'; name: 'PhaseGroup'; ofType: null; } }; 'placeholderName': { name: 'placeholderName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'placement': { name: 'placement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'players': { name: 'players'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; } }; 'progressionSeedId': { name: 'progressionSeedId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'progressionSource': { name: 'progressionSource'; type: { kind: 'OBJECT'; name: 'Progression'; ofType: null; } }; 'seedNum': { name: 'seedNum'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'setRecordWithoutByes': { name: 'setRecordWithoutByes'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'standings': { name: 'standings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Standing'; ofType: null; }; } }; }; };
    'SeedConnection': { kind: 'OBJECT'; name: 'SeedConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Seed'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'SeedPageFilter': { kind: 'INPUT_OBJECT'; name: 'SeedPageFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'entrantName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'checkInState'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'phaseGroupId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'eventCheckInGroupId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'phaseId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'eventId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }]; };
    'SeedPaginationQuery': { kind: 'INPUT_OBJECT'; name: 'SeedPaginationQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'SeedPageFilter'; ofType: null; }; defaultValue: null }]; };
    'Set': { kind: 'OBJECT'; name: 'Set'; fields: { 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'displayScore': { name: 'displayScore'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'fullRoundText': { name: 'fullRoundText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'game': { name: 'game'; type: { kind: 'OBJECT'; name: 'Game'; ofType: null; } }; 'games': { name: 'games'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Game'; ofType: null; }; } }; 'hasPlaceholder': { name: 'hasPlaceholder'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'identifier': { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'lPlacement': { name: 'lPlacement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'phaseGroup': { name: 'phaseGroup'; type: { kind: 'OBJECT'; name: 'PhaseGroup'; ofType: null; } }; 'resetAffectedData': { name: 'resetAffectedData'; type: { kind: 'OBJECT'; name: 'ResetAffectedData'; ofType: null; } }; 'round': { name: 'round'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'setGamesType': { name: 'setGamesType'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'slots': { name: 'slots'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SetSlot'; ofType: null; }; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'station': { name: 'station'; type: { kind: 'OBJECT'; name: 'Stations'; ofType: null; } }; 'stream': { name: 'stream'; type: { kind: 'OBJECT'; name: 'Streams'; ofType: null; } }; 'totalGames': { name: 'totalGames'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'vodUrl': { name: 'vodUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'wPlacement': { name: 'wPlacement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'winnerId': { name: 'winnerId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'SetConnection': { kind: 'OBJECT'; name: 'SetConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Set'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'SetFilterLocation': { kind: 'INPUT_OBJECT'; name: 'SetFilterLocation'; isOneOf: false; inputFields: [{ name: 'state'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'distanceFrom'; type: { kind: 'INPUT_OBJECT'; name: 'SetFilterLocationDistanceFrom'; ofType: null; }; defaultValue: null }]; };
    'SetFilterLocationDistanceFrom': { kind: 'INPUT_OBJECT'; name: 'SetFilterLocationDistanceFrom'; isOneOf: false; inputFields: [{ name: 'point'; type: { kind: 'INPUT_OBJECT'; name: 'SetFilterLocationDistanceFromPoint'; ofType: null; }; defaultValue: null }, { name: 'radius'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SetFilterLocationDistanceFromPoint': { kind: 'INPUT_OBJECT'; name: 'SetFilterLocationDistanceFromPoint'; isOneOf: false; inputFields: [{ name: 'lat'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'lon'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'SetFilters': { kind: 'INPUT_OBJECT'; name: 'SetFilters'; isOneOf: false; inputFields: [{ name: 'entrantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'entrantSize'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'hasVod'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hideEmpty'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'showByes'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isEventOnline'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'INPUT_OBJECT'; name: 'SetFilterLocation'; ofType: null; }; defaultValue: null }, { name: 'participantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'phaseGroupIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'phaseIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'eventIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tournamentIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'playerIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'roundNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'state'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'stationIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'stationNumbers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'updatedAfter'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; defaultValue: null }]; };
    'SetSlot': { kind: 'OBJECT'; name: 'SetSlot'; fields: { 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'prereqId': { name: 'prereqId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'prereqPlacement': { name: 'prereqPlacement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'prereqType': { name: 'prereqType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seed': { name: 'seed'; type: { kind: 'OBJECT'; name: 'Seed'; ofType: null; } }; 'slotIndex': { name: 'slotIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'standing': { name: 'standing'; type: { kind: 'OBJECT'; name: 'Standing'; ofType: null; } }; }; };
    'SetSortType': { name: 'SetSortType'; enumValues: 'NONE' | 'CALL_ORDER' | 'MAGIC' | 'RECENT' | 'STANDARD' | 'ROUND'; };
    'Shop': { kind: 'OBJECT'; name: 'Shop'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'levels': { name: 'levels'; type: { kind: 'OBJECT'; name: 'ShopLevelConnection'; ofType: null; } }; 'messages': { name: 'messages'; type: { kind: 'OBJECT'; name: 'ShopOrderMessageConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopLevel': { kind: 'OBJECT'; name: 'ShopLevel'; fields: { 'currAmount': { name: 'currAmount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'goalAmount': { name: 'goalAmount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopLevelConnection': { kind: 'OBJECT'; name: 'ShopLevelConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopLevel'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'ShopLevelsQuery': { kind: 'INPUT_OBJECT'; name: 'ShopLevelsQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ShopOrderMessage': { kind: 'OBJECT'; name: 'ShopOrderMessage'; fields: { 'gamertag': { name: 'gamertag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'player': { name: 'player'; type: { kind: 'OBJECT'; name: 'Player'; ofType: null; } }; 'total': { name: 'total'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ShopOrderMessageConnection': { kind: 'OBJECT'; name: 'ShopOrderMessageConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopOrderMessage'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'ShopOrderMessagesQuery': { kind: 'INPUT_OBJECT'; name: 'ShopOrderMessagesQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SocialConnectionType': { name: 'SocialConnectionType'; enumValues: 'TWITTER' | 'TWITCH' | 'DISCORD' | 'MIXER' | 'XBOX'; };
    'Stage': { kind: 'OBJECT'; name: 'Stage'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Standing': { kind: 'OBJECT'; name: 'Standing'; fields: { 'container': { name: 'container'; type: { kind: 'UNION'; name: 'StandingContainer'; ofType: null; } }; 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'isFinal': { name: 'isFinal'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'placement': { name: 'placement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'player': { name: 'player'; type: { kind: 'OBJECT'; name: 'Player'; ofType: null; } }; 'standing': { name: 'standing'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stats': { name: 'stats'; type: { kind: 'OBJECT'; name: 'StandingStats'; ofType: null; } }; 'totalPoints': { name: 'totalPoints'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'StandingConnection': { kind: 'OBJECT'; name: 'StandingConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Standing'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'StandingContainer': { kind: 'UNION'; name: 'StandingContainer'; fields: {}; possibleTypes: 'Event' | 'PhaseGroup' | 'Set' | 'Tournament'; };
    'StandingGroupStandingPageFilter': { kind: 'INPUT_OBJECT'; name: 'StandingGroupStandingPageFilter'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'StandingPageFilter': { kind: 'INPUT_OBJECT'; name: 'StandingPageFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }]; };
    'StandingPaginationQuery': { kind: 'INPUT_OBJECT'; name: 'StandingPaginationQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'StandingPageFilter'; ofType: null; }; defaultValue: null }]; };
    'StandingStats': { kind: 'OBJECT'; name: 'StandingStats'; fields: { 'score': { name: 'score'; type: { kind: 'OBJECT'; name: 'Score'; ofType: null; } }; }; };
    'StationFilter': { kind: 'INPUT_OBJECT'; name: 'StationFilter'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'StationUpsertInput': { kind: 'INPUT_OBJECT'; name: 'StationUpsertInput'; isOneOf: false; inputFields: [{ name: 'number'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'clusterId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'Stations': { kind: 'OBJECT'; name: 'Stations'; fields: { 'canAutoAssign': { name: 'canAutoAssign'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'clusterNumber': { name: 'clusterNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clusterPrefix': { name: 'clusterPrefix'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'identifier': { name: 'identifier'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'numSetups': { name: 'numSetups'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'prefix': { name: 'prefix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'queue': { name: 'queue'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'queueDepth': { name: 'queueDepth'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; }; };
    'StationsConnection': { kind: 'OBJECT'; name: 'StationsConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Stations'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'Stream': { kind: 'OBJECT'; name: 'Stream'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'isOnline': { name: 'isOnline'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'StreamType'; ofType: null; } }; }; };
    'StreamQueue': { kind: 'OBJECT'; name: 'StreamQueue'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sets': { name: 'sets'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Set'; ofType: null; }; } }; 'stream': { name: 'stream'; type: { kind: 'OBJECT'; name: 'Streams'; ofType: null; } }; }; };
    'StreamSource': { name: 'StreamSource'; enumValues: 'TWITCH' | 'HITBOX' | 'STREAMME' | 'MIXER' | 'YOUTUBE'; };
    'StreamType': { name: 'StreamType'; enumValues: 'TWITCH' | 'MIXER' | 'YOUTUBE'; };
    'Streams': { kind: 'OBJECT'; name: 'Streams'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'followerCount': { name: 'followerCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'isOnline': { name: 'isOnline'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'numSetups': { name: 'numSetups'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'parentStreamId': { name: 'parentStreamId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'streamGame': { name: 'streamGame'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'streamId': { name: 'streamId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'streamLogo': { name: 'streamLogo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'streamName': { name: 'streamName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'streamSource': { name: 'streamSource'; type: { kind: 'ENUM'; name: 'StreamSource'; ofType: null; } }; 'streamStatus': { name: 'streamStatus'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'streamType': { name: 'streamType'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'streamTypeId': { name: 'streamTypeId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'String': unknown;
    'Team': { kind: 'INTERFACE'; name: 'Team'; fields: { 'discriminator': { name: 'discriminator'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'entrant': { name: 'entrant'; type: { kind: 'OBJECT'; name: 'Entrant'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'members': { name: 'members'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TeamMember'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'EventTeam' | 'GlobalTeam'; };
    'TeamActionSet': { kind: 'OBJECT'; name: 'TeamActionSet'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'TeamConnection': { kind: 'OBJECT'; name: 'TeamConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INTERFACE'; name: 'Team'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'TeamMember': { kind: 'OBJECT'; name: 'TeamMember'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'isAlternate': { name: 'isAlternate'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isCaptain': { name: 'isCaptain'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'memberType': { name: 'memberType'; type: { kind: 'ENUM'; name: 'TeamMemberType'; ofType: null; } }; 'participant': { name: 'participant'; type: { kind: 'OBJECT'; name: 'Participant'; ofType: null; } }; 'player': { name: 'player'; type: { kind: 'OBJECT'; name: 'Player'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'TeamMemberStatus'; ofType: null; } }; }; };
    'TeamMemberStatus': { name: 'TeamMemberStatus'; enumValues: 'UNKNOWN' | 'ACCEPTED' | 'INVITED' | 'REQUEST' | 'ALUM' | 'HIATUS' | 'OPEN_SPOT'; };
    'TeamMemberType': { name: 'TeamMemberType'; enumValues: 'PLAYER' | 'STAFF'; };
    'TeamPaginationFilter': { kind: 'INPUT_OBJECT'; name: 'TeamPaginationFilter'; isOneOf: false; inputFields: [{ name: 'globalTeamId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'eventState'; type: { kind: 'ENUM'; name: 'ActivityState'; ofType: null; }; defaultValue: null }, { name: 'eventId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'eventIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'minEntrantCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxEntrantCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'tournamentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'memberStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'TeamMemberStatus'; ofType: null; }; }; defaultValue: null }, { name: 'videogameId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'isLeague'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'upcoming'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'past'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'rosterComplete'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'rosterIncomplete'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'TeamPaginationQuery': { kind: 'INPUT_OBJECT'; name: 'TeamPaginationQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'TeamPaginationFilter'; ofType: null; }; defaultValue: null }]; };
    'TeamRosterSize': { kind: 'OBJECT'; name: 'TeamRosterSize'; fields: { 'maxAlternates': { name: 'maxAlternates'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxPlayers': { name: 'maxPlayers'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minAlternates': { name: 'minAlternates'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minPlayers': { name: 'minPlayers'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Timestamp': unknown;
    'TopGameFilter': { kind: 'INPUT_OBJECT'; name: 'TopGameFilter'; isOneOf: false; inputFields: [{ name: 'gameNums'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'Tournament': { kind: 'OBJECT'; name: 'Tournament'; fields: { 'addrState': { name: 'addrState'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'admins': { name: 'admins'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'currency': { name: 'currency'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endAt': { name: 'endAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'eventRegistrationClosesAt': { name: 'eventRegistrationClosesAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; } }; 'hasOfflineEvents': { name: 'hasOfflineEvents'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hasOnlineEvents': { name: 'hasOnlineEvents'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hashtag': { name: 'hashtag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'isOnline': { name: 'isOnline'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isRegistrationOpen': { name: 'isRegistrationOpen'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lat': { name: 'lat'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'links': { name: 'links'; type: { kind: 'OBJECT'; name: 'TournamentLinks'; ofType: null; } }; 'lng': { name: 'lng'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'mapsPlaceId': { name: 'mapsPlaceId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'numAttendees': { name: 'numAttendees'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'owner': { name: 'owner'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'ParticipantConnection'; ofType: null; } }; 'postalCode': { name: 'postalCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'primaryContact': { name: 'primaryContact'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'primaryContactType': { name: 'primaryContactType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publishing': { name: 'publishing'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'registrationClosesAt': { name: 'registrationClosesAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'rules': { name: 'rules'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shortSlug': { name: 'shortSlug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stations': { name: 'stations'; type: { kind: 'OBJECT'; name: 'StationsConnection'; ofType: null; } }; 'streamQueue': { name: 'streamQueue'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'StreamQueue'; ofType: null; }; } }; 'streams': { name: 'streams'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Streams'; ofType: null; }; } }; 'teamCreationClosesAt': { name: 'teamCreationClosesAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'teams': { name: 'teams'; type: { kind: 'OBJECT'; name: 'TeamConnection'; ofType: null; } }; 'timezone': { name: 'timezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tournamentType': { name: 'tournamentType'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'venueAddress': { name: 'venueAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'venueName': { name: 'venueName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'waves': { name: 'waves'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Wave'; ofType: null; }; } }; }; };
    'TournamentConnection': { kind: 'OBJECT'; name: 'TournamentConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'TournamentLinks': { kind: 'OBJECT'; name: 'TournamentLinks'; fields: { 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'facebook': { name: 'facebook'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TournamentLocationFilter': { kind: 'INPUT_OBJECT'; name: 'TournamentLocationFilter'; isOneOf: false; inputFields: [{ name: 'distanceFrom'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'distance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'TournamentPageFilter': { kind: 'INPUT_OBJECT'; name: 'TournamentPageFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'ownerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'isCurrentUserAdmin'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'countryCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addrState'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'INPUT_OBJECT'; name: 'TournamentLocationFilter'; ofType: null; }; defaultValue: null }, { name: 'afterDate'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; defaultValue: null }, { name: 'beforeDate'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; defaultValue: null }, { name: 'computedUpdatedAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'venueName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isFeatured'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isLeague'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hasBannerImages'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'activeShops'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'regOpen'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'past'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'published'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publiclySearchable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'staffPicks'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hasOnlineEvents'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'topGames'; type: { kind: 'INPUT_OBJECT'; name: 'TopGameFilter'; ofType: null; }; defaultValue: null }, { name: 'upcoming'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'videogameIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'sortByScore'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'TournamentPaginationSort': { name: 'TournamentPaginationSort'; enumValues: 'startAt' | 'endAt' | 'eventRegistrationClosesAt' | 'computedUpdatedAt'; };
    'TournamentQuery': { kind: 'INPUT_OBJECT'; name: 'TournamentQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'TournamentPageFilter'; ofType: null; }; defaultValue: null }, { name: 'sort'; type: { kind: 'ENUM'; name: 'TournamentPaginationSort'; ofType: null; }; defaultValue: null }]; };
    'TournamentRegistrationInput': { kind: 'INPUT_OBJECT'; name: 'TournamentRegistrationInput'; isOneOf: false; inputFields: [{ name: 'eventIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'UpdatePhaseSeedInfo': { kind: 'INPUT_OBJECT'; name: 'UpdatePhaseSeedInfo'; isOneOf: false; inputFields: [{ name: 'seedId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'seedNum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'phaseGroupId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'UpdatePhaseSeedingOptions': { kind: 'INPUT_OBJECT'; name: 'UpdatePhaseSeedingOptions'; isOneOf: false; inputFields: [{ name: 'strictMode'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'authorizations': { name: 'authorizations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProfileAuthorization'; ofType: null; }; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'birthday': { name: 'birthday'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discriminator': { name: 'discriminator'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; } }; 'genderPronoun': { name: 'genderPronoun'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'leagues': { name: 'leagues'; type: { kind: 'OBJECT'; name: 'LeagueConnection'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'player': { name: 'player'; type: { kind: 'OBJECT'; name: 'Player'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tournaments': { name: 'tournaments'; type: { kind: 'OBJECT'; name: 'TournamentConnection'; ofType: null; } }; }; };
    'UserEventsPaginationFilter': { kind: 'INPUT_OBJECT'; name: 'UserEventsPaginationFilter'; isOneOf: false; inputFields: [{ name: 'videogameId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'eventType'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'minEntrantCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxEntrantCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'INPUT_OBJECT'; name: 'LocationFilterType'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }]; };
    'UserEventsPaginationQuery': { kind: 'INPUT_OBJECT'; name: 'UserEventsPaginationQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'UserEventsPaginationFilter'; ofType: null; }; defaultValue: null }]; };
    'UserLeaguesPaginationFilter': { kind: 'INPUT_OBJECT'; name: 'UserLeaguesPaginationFilter'; isOneOf: false; inputFields: [{ name: 'videogameId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'upcoming'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'past'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }]; };
    'UserLeaguesPaginationQuery': { kind: 'INPUT_OBJECT'; name: 'UserLeaguesPaginationQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'UserLeaguesPaginationFilter'; ofType: null; }; defaultValue: null }]; };
    'UserTournamentsPaginationFilter': { kind: 'INPUT_OBJECT'; name: 'UserTournamentsPaginationFilter'; isOneOf: false; inputFields: [{ name: 'past'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'upcoming'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'INPUT_OBJECT'; name: 'PaginationSearchType'; ofType: null; }; defaultValue: null }, { name: 'videogameId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tournamentView'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'excludeId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'UserTournamentsPaginationQuery': { kind: 'INPUT_OBJECT'; name: 'UserTournamentsPaginationQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'UserTournamentsPaginationFilter'; ofType: null; }; defaultValue: null }]; };
    'Videogame': { kind: 'OBJECT'; name: 'Videogame'; fields: { 'characters': { name: 'characters'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Character'; ofType: null; }; } }; 'displayName': { name: 'displayName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stages': { name: 'stages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Stage'; ofType: null; }; } }; }; };
    'VideogameConnection': { kind: 'OBJECT'; name: 'VideogameConnection'; fields: { 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Videogame'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; } }; }; };
    'VideogamePageFilter': { kind: 'INPUT_OBJECT'; name: 'VideogamePageFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'forUser'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'VideogameQuery': { kind: 'INPUT_OBJECT'; name: 'VideogameQuery'; isOneOf: false; inputFields: [{ name: 'page'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'perPage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sortBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'VideogamePageFilter'; ofType: null; }; defaultValue: null }]; };
    'Wave': { kind: 'OBJECT'; name: 'Wave'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'identifier': { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; } }; }; };
    'WaveUpsertInput': { kind: 'INPUT_OBJECT'; name: 'WaveUpsertInput'; isOneOf: false; inputFields: [{ name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'startAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; }; defaultValue: null }, { name: 'endAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; }; defaultValue: null }]; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}